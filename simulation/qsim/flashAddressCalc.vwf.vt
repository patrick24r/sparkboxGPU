// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/12/2020 16:20:27"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          flashAddressCalc
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module flashAddressCalc_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg [15:0] drawnFontHeight;
reg [15:0] drawnFontWidth;
reg [15:0] fontSelectionIndex;
reg [15:0] layerX;
reg [15:0] layerY;
reg rst;
// wires                                               
wire [29:0] addressOffsetBits;
wire rdy;

// assign statements (if any)                          
flashAddressCalc i1 (
// port map - connection between master ports and signals/registers   
	.addressOffsetBits(addressOffsetBits),
	.clk(clk),
	.drawnFontHeight(drawnFontHeight),
	.drawnFontWidth(drawnFontWidth),
	.fontSelectionIndex(fontSelectionIndex),
	.layerX(layerX),
	.layerY(layerY),
	.rdy(rdy),
	.rst(rst)
);
initial 
begin 
#1000000 $finish;
end 

// clk
initial
begin
	clk = 1'b1;
	# 10000;
	repeat(49)
	begin
		clk = 1'b0;
		clk = #10000 1'b1;
		# 10000;
	end
	clk = 1'b0;
end 

// rst
initial
begin
	rst = 1'b1;
	rst = #120000 1'b0;
	rst = #10000 1'b1;
	rst = #110000 1'b0;
	rst = #10000 1'b1;
	rst = #110000 1'b0;
	rst = #10000 1'b1;
	rst = #110000 1'b0;
	rst = #10000 1'b1;
	rst = #110000 1'b0;
	rst = #10000 1'b1;
	rst = #110000 1'b0;
	rst = #10000 1'b1;
	rst = #110000 1'b0;
	rst = #10000 1'b1;
end 
// drawnFontWidth[ 15 ]
initial
begin
	drawnFontWidth[15] = 1'b0;
end 
// drawnFontWidth[ 14 ]
initial
begin
	drawnFontWidth[14] = 1'b0;
end 
// drawnFontWidth[ 13 ]
initial
begin
	drawnFontWidth[13] = 1'b0;
end 
// drawnFontWidth[ 12 ]
initial
begin
	drawnFontWidth[12] = 1'b0;
end 
// drawnFontWidth[ 11 ]
initial
begin
	drawnFontWidth[11] = 1'b0;
end 
// drawnFontWidth[ 10 ]
initial
begin
	drawnFontWidth[10] = 1'b0;
end 
// drawnFontWidth[ 9 ]
initial
begin
	drawnFontWidth[9] = 1'b0;
end 
// drawnFontWidth[ 8 ]
initial
begin
	drawnFontWidth[8] = 1'b0;
end 
// drawnFontWidth[ 7 ]
initial
begin
	drawnFontWidth[7] = 1'b0;
end 
// drawnFontWidth[ 6 ]
initial
begin
	drawnFontWidth[6] = 1'b1;
end 
// drawnFontWidth[ 5 ]
initial
begin
	drawnFontWidth[5] = 1'b0;
end 
// drawnFontWidth[ 4 ]
initial
begin
	drawnFontWidth[4] = 1'b1;
end 
// drawnFontWidth[ 3 ]
initial
begin
	drawnFontWidth[3] = 1'b0;
end 
// drawnFontWidth[ 2 ]
initial
begin
	drawnFontWidth[2] = 1'b0;
end 
// drawnFontWidth[ 1 ]
initial
begin
	drawnFontWidth[1] = 1'b0;
end 
// drawnFontWidth[ 0 ]
initial
begin
	drawnFontWidth[0] = 1'b0;
end 
// drawnFontHeight[ 15 ]
initial
begin
	drawnFontHeight[15] = 1'b0;
end 
// drawnFontHeight[ 14 ]
initial
begin
	drawnFontHeight[14] = 1'b0;
end 
// drawnFontHeight[ 13 ]
initial
begin
	drawnFontHeight[13] = 1'b0;
end 
// drawnFontHeight[ 12 ]
initial
begin
	drawnFontHeight[12] = 1'b0;
end 
// drawnFontHeight[ 11 ]
initial
begin
	drawnFontHeight[11] = 1'b0;
end 
// drawnFontHeight[ 10 ]
initial
begin
	drawnFontHeight[10] = 1'b0;
end 
// drawnFontHeight[ 9 ]
initial
begin
	drawnFontHeight[9] = 1'b0;
end 
// drawnFontHeight[ 8 ]
initial
begin
	drawnFontHeight[8] = 1'b0;
end 
// drawnFontHeight[ 7 ]
initial
begin
	drawnFontHeight[7] = 1'b1;
end 
// drawnFontHeight[ 6 ]
initial
begin
	drawnFontHeight[6] = 1'b0;
end 
// drawnFontHeight[ 5 ]
initial
begin
	drawnFontHeight[5] = 1'b1;
end 
// drawnFontHeight[ 4 ]
initial
begin
	drawnFontHeight[4] = 1'b0;
end 
// drawnFontHeight[ 3 ]
initial
begin
	drawnFontHeight[3] = 1'b0;
end 
// drawnFontHeight[ 2 ]
initial
begin
	drawnFontHeight[2] = 1'b0;
end 
// drawnFontHeight[ 1 ]
initial
begin
	drawnFontHeight[1] = 1'b0;
end 
// drawnFontHeight[ 0 ]
initial
begin
	drawnFontHeight[0] = 1'b0;
end 
// fontSelectionIndex[ 15 ]
initial
begin
	fontSelectionIndex[15] = 1'b0;
end 
// fontSelectionIndex[ 14 ]
initial
begin
	fontSelectionIndex[14] = 1'b0;
end 
// fontSelectionIndex[ 13 ]
initial
begin
	fontSelectionIndex[13] = 1'b0;
end 
// fontSelectionIndex[ 12 ]
initial
begin
	fontSelectionIndex[12] = 1'b0;
end 
// fontSelectionIndex[ 11 ]
initial
begin
	fontSelectionIndex[11] = 1'b0;
end 
// fontSelectionIndex[ 10 ]
initial
begin
	fontSelectionIndex[10] = 1'b0;
end 
// fontSelectionIndex[ 9 ]
initial
begin
	fontSelectionIndex[9] = 1'b0;
end 
// fontSelectionIndex[ 8 ]
initial
begin
	fontSelectionIndex[8] = 1'b0;
end 
// fontSelectionIndex[ 7 ]
initial
begin
	fontSelectionIndex[7] = 1'b0;
end 
// fontSelectionIndex[ 6 ]
initial
begin
	fontSelectionIndex[6] = 1'b0;
end 
// fontSelectionIndex[ 5 ]
initial
begin
	fontSelectionIndex[5] = 1'b0;
	fontSelectionIndex[5] = #120000 1'b1;
	fontSelectionIndex[5] = #120000 1'b0;
	fontSelectionIndex[5] = #360000 1'b1;
end 
// fontSelectionIndex[ 4 ]
initial
begin
	fontSelectionIndex[4] = 1'b0;
	fontSelectionIndex[4] = #360000 1'b1;
	fontSelectionIndex[4] = #120000 1'b0;
	fontSelectionIndex[4] = #120000 1'b1;
end 
// fontSelectionIndex[ 3 ]
initial
begin
	fontSelectionIndex[3] = 1'b1;
	fontSelectionIndex[3] = #240000 1'b0;
	fontSelectionIndex[3] = #120000 1'b1;
	fontSelectionIndex[3] = #600000 1'b0;
end 
// fontSelectionIndex[ 2 ]
initial
begin
	fontSelectionIndex[2] = 1'b0;
	fontSelectionIndex[2] = #120000 1'b1;
	fontSelectionIndex[2] = #120000 1'b0;
	fontSelectionIndex[2] = #360000 1'b1;
	fontSelectionIndex[2] = #240000 1'b0;
	fontSelectionIndex[2] = #120000 1'b1;
end 
// fontSelectionIndex[ 1 ]
initial
begin
	fontSelectionIndex[1] = 1'b1;
	fontSelectionIndex[1] = #240000 1'b0;
	fontSelectionIndex[1] = #120000 1'b1;
	fontSelectionIndex[1] = #240000 1'b0;
	fontSelectionIndex[1] = #120000 1'b1;
	fontSelectionIndex[1] = #120000 1'b0;
	fontSelectionIndex[1] = #120000 1'b1;
end 
// fontSelectionIndex[ 0 ]
initial
begin
	fontSelectionIndex[0] = 1'b0;
	fontSelectionIndex[0] = #120000 1'b1;
	fontSelectionIndex[0] = #120000 1'b0;
	fontSelectionIndex[0] = #120000 1'b1;
	fontSelectionIndex[0] = #120000 1'b0;
	fontSelectionIndex[0] = #480000 1'b1;
end 
// layerX[ 15 ]
initial
begin
	layerX[15] = 1'b0;
end 
// layerX[ 14 ]
initial
begin
	layerX[14] = 1'b0;
end 
// layerX[ 13 ]
initial
begin
	layerX[13] = 1'b0;
end 
// layerX[ 12 ]
initial
begin
	layerX[12] = 1'b0;
end 
// layerX[ 11 ]
initial
begin
	layerX[11] = 1'b0;
end 
// layerX[ 10 ]
initial
begin
	layerX[10] = 1'b0;
end 
// layerX[ 9 ]
initial
begin
	layerX[9] = 1'b0;
end 
// layerX[ 8 ]
initial
begin
	layerX[8] = 1'b0;
end 
// layerX[ 7 ]
initial
begin
	layerX[7] = 1'b0;
end 
// layerX[ 6 ]
initial
begin
	layerX[6] = 1'b0;
end 
// layerX[ 5 ]
initial
begin
	layerX[5] = 1'b1;
	layerX[5] = #120000 1'b0;
	layerX[5] = #120000 1'b1;
	layerX[5] = #360000 1'b0;
	layerX[5] = #120000 1'b1;
end 
// layerX[ 4 ]
initial
begin
	layerX[4] = 1'b0;
	layerX[4] = #120000 1'b1;
	layerX[4] = #240000 1'b0;
	layerX[4] = #120000 1'b1;
	layerX[4] = #120000 1'b0;
	layerX[4] = #120000 1'b1;
	layerX[4] = #120000 1'b0;
	layerX[4] = #120000 1'b1;
end 
// layerX[ 3 ]
initial
begin
	layerX[3] = 1'b1;
	layerX[3] = #240000 1'b0;
	layerX[3] = #120000 1'b1;
	layerX[3] = #120000 1'b0;
	layerX[3] = #240000 1'b1;
	layerX[3] = #120000 1'b0;
	layerX[3] = #120000 1'b1;
end 
// layerX[ 2 ]
initial
begin
	layerX[2] = 1'b1;
	layerX[2] = #120000 1'b0;
	layerX[2] = #120000 1'b1;
	layerX[2] = #480000 1'b0;
	layerX[2] = #120000 1'b1;
end 
// layerX[ 1 ]
initial
begin
	layerX[1] = 1'b1;
	layerX[1] = #240000 1'b0;
	layerX[1] = #360000 1'b1;
	layerX[1] = #240000 1'b0;
	layerX[1] = #120000 1'b1;
end 
// layerX[ 0 ]
initial
begin
	layerX[0] = 1'b1;
	layerX[0] = #480000 1'b0;
	layerX[0] = #120000 1'b1;
end 
// layerY[ 15 ]
initial
begin
	layerY[15] = 1'b0;
end 
// layerY[ 14 ]
initial
begin
	layerY[14] = 1'b0;
end 
// layerY[ 13 ]
initial
begin
	layerY[13] = 1'b0;
end 
// layerY[ 12 ]
initial
begin
	layerY[12] = 1'b0;
end 
// layerY[ 11 ]
initial
begin
	layerY[11] = 1'b0;
end 
// layerY[ 10 ]
initial
begin
	layerY[10] = 1'b0;
end 
// layerY[ 9 ]
initial
begin
	layerY[9] = 1'b0;
end 
// layerY[ 8 ]
initial
begin
	layerY[8] = 1'b0;
end 
// layerY[ 7 ]
initial
begin
	layerY[7] = 1'b0;
	layerY[7] = #240000 1'b1;
	layerY[7] = #240000 1'b0;
	layerY[7] = #120000 1'b1;
	layerY[7] = #240000 1'b0;
end 
// layerY[ 6 ]
initial
begin
	layerY[6] = 1'b0;
	layerY[6] = #360000 1'b1;
	layerY[6] = #120000 1'b0;
	layerY[6] = #240000 1'b1;
	layerY[6] = #240000 1'b0;
end 
// layerY[ 5 ]
initial
begin
	layerY[5] = 1'b1;
	layerY[5] = #120000 1'b0;
	layerY[5] = #480000 1'b1;
	layerY[5] = #120000 1'b0;
end 
// layerY[ 4 ]
initial
begin
	layerY[4] = 1'b1;
	layerY[4] = #240000 1'b0;
	layerY[4] = #120000 1'b1;
	layerY[4] = #240000 1'b0;
	layerY[4] = #120000 1'b1;
end 
// layerY[ 3 ]
initial
begin
	layerY[3] = 1'b0;
	layerY[3] = #360000 1'b1;
	layerY[3] = #120000 1'b0;
	layerY[3] = #360000 1'b1;
end 
// layerY[ 2 ]
initial
begin
	layerY[2] = 1'b1;
	layerY[2] = #360000 1'b0;
	layerY[2] = #240000 1'b1;
	layerY[2] = #120000 1'b0;
	layerY[2] = #240000 1'b1;
end 
// layerY[ 1 ]
initial
begin
	layerY[1] = 1'b1;
	layerY[1] = #240000 1'b0;
	layerY[1] = #480000 1'b1;
	layerY[1] = #240000 1'b0;
end 
// layerY[ 0 ]
initial
begin
	layerY[0] = 1'b0;
	layerY[0] = #120000 1'b1;
	layerY[0] = #120000 1'b0;
	layerY[0] = #120000 1'b1;
	layerY[0] = #120000 1'b0;
	layerY[0] = #120000 1'b1;
	layerY[0] = #120000 1'b0;
	layerY[0] = #120000 1'b1;
end 
endmodule

