// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/24/2020 19:17:05"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          pixelFifo
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module pixelFifo_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [23:0] data;
reg rdclk;
reg rdreq;
reg wrclk;
reg wrreq;
// wires                                               
wire [23:0] q;
wire rdempty;
wire wrfull;

// assign statements (if any)                          
pixelFifo i1 (
// port map - connection between master ports and signals/registers   
	.data(data),
	.q(q),
	.rdclk(rdclk),
	.rdempty(rdempty),
	.rdreq(rdreq),
	.wrclk(wrclk),
	.wrfull(wrfull),
	.wrreq(wrreq)
);
initial 
begin 
#1000000 $finish;
end 
// data[ 23 ]
initial
begin
	data[23] = 1'b0;
	data[23] = #20000 1'b1;
	data[23] = #20000 1'b0;
	data[23] = #40000 1'b1;
	data[23] = #20000 1'b0;
	data[23] = #20000 1'b1;
	data[23] = #40000 1'b0;
	data[23] = #120000 1'b1;
	data[23] = #60000 1'b0;
	data[23] = #20000 1'b1;
	data[23] = #20000 1'b0;
	data[23] = #40000 1'b1;
	data[23] = #20000 1'b0;
	data[23] = #20000 1'b1;
	data[23] = #20000 1'b0;
	data[23] = #100000 1'b1;
	data[23] = #20000 1'b0;
	data[23] = #20000 1'b1;
	data[23] = #20000 1'b0;
	data[23] = #20000 1'b1;
	data[23] = #20000 1'b0;
	data[23] = #20000 1'b1;
	data[23] = #40000 1'b0;
	data[23] = #40000 1'b1;
	data[23] = #40000 1'b0;
	data[23] = #20000 1'b1;
	data[23] = #100000 1'b0;
	data[23] = #40000 1'b1;
end 
// data[ 22 ]
initial
begin
	data[22] = 1'b1;
	data[22] = #20000 1'b0;
	data[22] = #40000 1'b1;
	data[22] = #20000 1'b0;
	data[22] = #40000 1'b1;
	data[22] = #20000 1'b0;
	data[22] = #40000 1'b1;
	data[22] = #20000 1'b0;
	data[22] = #80000 1'b1;
	data[22] = #40000 1'b0;
	data[22] = #20000 1'b1;
	data[22] = #20000 1'b0;
	data[22] = #20000 1'b1;
	data[22] = #20000 1'b0;
	data[22] = #20000 1'b1;
	data[22] = #40000 1'b0;
	data[22] = #20000 1'b1;
	data[22] = #20000 1'b0;
	data[22] = #100000 1'b1;
	data[22] = #80000 1'b0;
	data[22] = #60000 1'b1;
	data[22] = #60000 1'b0;
	data[22] = #20000 1'b1;
	data[22] = #60000 1'b0;
	data[22] = #40000 1'b1;
	data[22] = #40000 1'b0;
	data[22] = #20000 1'b1;
end 
// data[ 21 ]
initial
begin
	data[21] = 1'b0;
	data[21] = #20000 1'b1;
	data[21] = #40000 1'b0;
	data[21] = #20000 1'b1;
	data[21] = #20000 1'b0;
	data[21] = #80000 1'b1;
	data[21] = #20000 1'b0;
	data[21] = #40000 1'b1;
	data[21] = #20000 1'b0;
	data[21] = #80000 1'b1;
	data[21] = #40000 1'b0;
	data[21] = #20000 1'b1;
	data[21] = #40000 1'b0;
	data[21] = #20000 1'b1;
	data[21] = #40000 1'b0;
	data[21] = #20000 1'b1;
	data[21] = #20000 1'b0;
	data[21] = #40000 1'b1;
	data[21] = #20000 1'b0;
	data[21] = #20000 1'b1;
	data[21] = #20000 1'b0;
	data[21] = #20000 1'b1;
	data[21] = #20000 1'b0;
	data[21] = #20000 1'b1;
	data[21] = #40000 1'b0;
	data[21] = #60000 1'b1;
	data[21] = #20000 1'b0;
	data[21] = #20000 1'b1;
	data[21] = #60000 1'b0;
	data[21] = #60000 1'b1;
	data[21] = #20000 1'b0;
end 
// data[ 20 ]
initial
begin
	data[20] = 1'b0;
	data[20] = #40000 1'b1;
	data[20] = #120000 1'b0;
	data[20] = #20000 1'b1;
	data[20] = #40000 1'b0;
	data[20] = #80000 1'b1;
	data[20] = #60000 1'b0;
	data[20] = #20000 1'b1;
	data[20] = #20000 1'b0;
	data[20] = #20000 1'b1;
	data[20] = #60000 1'b0;
	data[20] = #60000 1'b1;
	data[20] = #40000 1'b0;
	data[20] = #40000 1'b1;
	data[20] = #20000 1'b0;
	data[20] = #20000 1'b1;
	data[20] = #20000 1'b0;
	data[20] = #20000 1'b1;
	data[20] = #40000 1'b0;
	data[20] = #40000 1'b1;
	data[20] = #100000 1'b0;
	data[20] = #20000 1'b1;
	data[20] = #60000 1'b0;
end 
// data[ 19 ]
initial
begin
	data[19] = 1'b0;
	data[19] = #40000 1'b1;
	data[19] = #20000 1'b0;
	data[19] = #20000 1'b1;
	data[19] = #20000 1'b0;
	data[19] = #20000 1'b1;
	data[19] = #20000 1'b0;
	data[19] = #40000 1'b1;
	data[19] = #40000 1'b0;
	data[19] = #80000 1'b1;
	data[19] = #40000 1'b0;
	data[19] = #20000 1'b1;
	data[19] = #60000 1'b0;
	data[19] = #40000 1'b1;
	data[19] = #40000 1'b0;
	data[19] = #40000 1'b1;
	data[19] = #20000 1'b0;
	data[19] = #20000 1'b1;
	data[19] = #20000 1'b0;
	data[19] = #20000 1'b1;
	data[19] = #20000 1'b0;
	data[19] = #20000 1'b1;
	data[19] = #60000 1'b0;
	data[19] = #40000 1'b1;
	data[19] = #180000 1'b0;
	data[19] = #20000 1'b1;
end 
// data[ 18 ]
initial
begin
	data[18] = 1'b1;
	data[18] = #40000 1'b0;
	data[18] = #20000 1'b1;
	data[18] = #20000 1'b0;
	data[18] = #40000 1'b1;
	data[18] = #20000 1'b0;
	data[18] = #20000 1'b1;
	data[18] = #80000 1'b0;
	data[18] = #20000 1'b1;
	data[18] = #60000 1'b0;
	data[18] = #20000 1'b1;
	data[18] = #60000 1'b0;
	data[18] = #40000 1'b1;
	data[18] = #100000 1'b0;
	data[18] = #40000 1'b1;
	data[18] = #20000 1'b0;
	data[18] = #40000 1'b1;
	data[18] = #120000 1'b0;
	data[18] = #20000 1'b1;
	data[18] = #20000 1'b0;
	data[18] = #20000 1'b1;
	data[18] = #60000 1'b0;
	data[18] = #20000 1'b1;
	data[18] = #40000 1'b0;
end 
// data[ 17 ]
initial
begin
	data[17] = 1'b0;
	data[17] = #20000 1'b1;
	data[17] = #20000 1'b0;
	data[17] = #20000 1'b1;
	data[17] = #80000 1'b0;
	data[17] = #20000 1'b1;
	data[17] = #60000 1'b0;
	data[17] = #140000 1'b1;
	data[17] = #40000 1'b0;
	data[17] = #20000 1'b1;
	data[17] = #40000 1'b0;
	data[17] = #40000 1'b1;
	data[17] = #20000 1'b0;
	data[17] = #40000 1'b1;
	data[17] = #20000 1'b0;
	data[17] = #40000 1'b1;
	data[17] = #40000 1'b0;
	data[17] = #60000 1'b1;
	data[17] = #40000 1'b0;
	data[17] = #120000 1'b1;
	data[17] = #20000 1'b0;
	data[17] = #40000 1'b1;
end 
// data[ 16 ]
initial
begin
	data[16] = 1'b1;
	data[16] = #20000 1'b0;
	data[16] = #100000 1'b1;
	data[16] = #40000 1'b0;
	data[16] = #20000 1'b1;
	data[16] = #20000 1'b0;
	data[16] = #20000 1'b1;
	data[16] = #40000 1'b0;
	data[16] = #40000 1'b1;
	data[16] = #20000 1'b0;
	data[16] = #40000 1'b1;
	data[16] = #100000 1'b0;
	data[16] = #20000 1'b1;
	data[16] = #80000 1'b0;
	data[16] = #20000 1'b1;
	data[16] = #20000 1'b0;
	data[16] = #20000 1'b1;
	data[16] = #80000 1'b0;
	data[16] = #60000 1'b1;
	data[16] = #20000 1'b0;
	data[16] = #40000 1'b1;
	data[16] = #20000 1'b0;
	data[16] = #20000 1'b1;
	data[16] = #20000 1'b0;
	data[16] = #40000 1'b1;
	data[16] = #40000 1'b0;
end 
// data[ 15 ]
initial
begin
	data[15] = 1'b1;
	data[15] = #40000 1'b0;
	data[15] = #60000 1'b1;
	data[15] = #40000 1'b0;
	data[15] = #100000 1'b1;
	data[15] = #60000 1'b0;
	data[15] = #20000 1'b1;
	data[15] = #60000 1'b0;
	data[15] = #20000 1'b1;
	data[15] = #20000 1'b0;
	data[15] = #20000 1'b1;
	data[15] = #40000 1'b0;
	data[15] = #100000 1'b1;
	data[15] = #20000 1'b0;
	data[15] = #60000 1'b1;
	data[15] = #40000 1'b0;
	data[15] = #20000 1'b1;
	data[15] = #20000 1'b0;
	data[15] = #20000 1'b1;
	data[15] = #20000 1'b0;
	data[15] = #20000 1'b1;
	data[15] = #40000 1'b0;
	data[15] = #20000 1'b1;
	data[15] = #20000 1'b0;
	data[15] = #80000 1'b1;
	data[15] = #20000 1'b0;
end 
// data[ 14 ]
initial
begin
	data[14] = 1'b1;
	data[14] = #80000 1'b0;
	data[14] = #40000 1'b1;
	data[14] = #40000 1'b0;
	data[14] = #80000 1'b1;
	data[14] = #20000 1'b0;
	data[14] = #60000 1'b1;
	data[14] = #20000 1'b0;
	data[14] = #100000 1'b1;
	data[14] = #60000 1'b0;
	data[14] = #20000 1'b1;
	data[14] = #20000 1'b0;
	data[14] = #20000 1'b1;
	data[14] = #100000 1'b0;
	data[14] = #20000 1'b1;
	data[14] = #60000 1'b0;
	data[14] = #20000 1'b1;
	data[14] = #20000 1'b0;
	data[14] = #20000 1'b1;
	data[14] = #40000 1'b0;
	data[14] = #60000 1'b1;
	data[14] = #40000 1'b0;
end 
// data[ 13 ]
initial
begin
	data[13] = 1'b1;
	data[13] = #100000 1'b0;
	data[13] = #20000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #100000 1'b1;
	data[13] = #80000 1'b0;
	data[13] = #60000 1'b1;
	data[13] = #20000 1'b0;
	data[13] = #40000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #20000 1'b1;
	data[13] = #20000 1'b0;
	data[13] = #20000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #20000 1'b1;
	data[13] = #20000 1'b0;
	data[13] = #20000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #20000 1'b1;
	data[13] = #20000 1'b0;
	data[13] = #40000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #20000 1'b1;
	data[13] = #20000 1'b0;
	data[13] = #20000 1'b1;
	data[13] = #100000 1'b0;
end 
// data[ 12 ]
initial
begin
	data[12] = 1'b0;
	data[12] = #20000 1'b1;
	data[12] = #40000 1'b0;
	data[12] = #40000 1'b1;
	data[12] = #40000 1'b0;
	data[12] = #40000 1'b1;
	data[12] = #80000 1'b0;
	data[12] = #20000 1'b1;
	data[12] = #60000 1'b0;
	data[12] = #40000 1'b1;
	data[12] = #60000 1'b0;
	data[12] = #60000 1'b1;
	data[12] = #20000 1'b0;
	data[12] = #20000 1'b1;
	data[12] = #20000 1'b0;
	data[12] = #40000 1'b1;
	data[12] = #60000 1'b0;
	data[12] = #60000 1'b1;
	data[12] = #60000 1'b0;
	data[12] = #40000 1'b1;
	data[12] = #20000 1'b0;
	data[12] = #140000 1'b1;
end 
// data[ 11 ]
initial
begin
	data[11] = 1'b0;
	data[11] = #20000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #20000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #100000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #20000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #40000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #20000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #20000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #20000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #20000 1'b1;
	data[11] = #40000 1'b0;
	data[11] = #80000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #20000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #60000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #60000 1'b1;
	data[11] = #40000 1'b0;
	data[11] = #20000 1'b1;
	data[11] = #20000 1'b0;
	data[11] = #40000 1'b1;
	data[11] = #60000 1'b0;
	data[11] = #40000 1'b1;
end 
// data[ 10 ]
initial
begin
	data[10] = 1'b1;
	data[10] = #40000 1'b0;
	data[10] = #40000 1'b1;
	data[10] = #20000 1'b0;
	data[10] = #40000 1'b1;
	data[10] = #40000 1'b0;
	data[10] = #20000 1'b1;
	data[10] = #20000 1'b0;
	data[10] = #60000 1'b1;
	data[10] = #20000 1'b0;
	data[10] = #20000 1'b1;
	data[10] = #20000 1'b0;
	data[10] = #60000 1'b1;
	data[10] = #40000 1'b0;
	data[10] = #20000 1'b1;
	data[10] = #20000 1'b0;
	data[10] = #40000 1'b1;
	data[10] = #80000 1'b0;
	data[10] = #40000 1'b1;
	data[10] = #60000 1'b0;
	data[10] = #20000 1'b1;
	data[10] = #140000 1'b0;
	data[10] = #20000 1'b1;
	data[10] = #20000 1'b0;
	data[10] = #20000 1'b1;
	data[10] = #40000 1'b0;
end 
// data[ 9 ]
initial
begin
	data[9] = 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #20000 1'b0;
	data[9] = #20000 1'b1;
	data[9] = #20000 1'b0;
	data[9] = #100000 1'b1;
	data[9] = #120000 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #20000 1'b0;
	data[9] = #20000 1'b1;
	data[9] = #20000 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #20000 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #100000 1'b0;
	data[9] = #60000 1'b1;
	data[9] = #40000 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #80000 1'b0;
	data[9] = #20000 1'b1;
	data[9] = #20000 1'b0;
	data[9] = #20000 1'b1;
	data[9] = #20000 1'b0;
	data[9] = #20000 1'b1;
	data[9] = #20000 1'b0;
	data[9] = #20000 1'b1;
end 
// data[ 8 ]
initial
begin
	data[8] = 1'b1;
	data[8] = #120000 1'b0;
	data[8] = #80000 1'b1;
	data[8] = #40000 1'b0;
	data[8] = #20000 1'b1;
	data[8] = #60000 1'b0;
	data[8] = #20000 1'b1;
	data[8] = #80000 1'b0;
	data[8] = #60000 1'b1;
	data[8] = #20000 1'b0;
	data[8] = #100000 1'b1;
	data[8] = #40000 1'b0;
	data[8] = #20000 1'b1;
	data[8] = #40000 1'b0;
	data[8] = #20000 1'b1;
	data[8] = #60000 1'b0;
	data[8] = #80000 1'b1;
	data[8] = #40000 1'b0;
	data[8] = #20000 1'b1;
	data[8] = #40000 1'b0;
	data[8] = #20000 1'b1;
end 
// data[ 7 ]
initial
begin
	data[7] = 1'b0;
	data[7] = #20000 1'b1;
	data[7] = #20000 1'b0;
	data[7] = #20000 1'b1;
	data[7] = #40000 1'b0;
	data[7] = #40000 1'b1;
	data[7] = #40000 1'b0;
	data[7] = #80000 1'b1;
	data[7] = #40000 1'b0;
	data[7] = #40000 1'b1;
	data[7] = #40000 1'b0;
	data[7] = #80000 1'b1;
	data[7] = #100000 1'b0;
	data[7] = #20000 1'b1;
	data[7] = #40000 1'b0;
	data[7] = #60000 1'b1;
	data[7] = #40000 1'b0;
	data[7] = #20000 1'b1;
	data[7] = #60000 1'b0;
	data[7] = #20000 1'b1;
	data[7] = #20000 1'b0;
	data[7] = #80000 1'b1;
	data[7] = #60000 1'b0;
end 
// data[ 6 ]
initial
begin
	data[6] = 1'b0;
	data[6] = #20000 1'b1;
	data[6] = #20000 1'b0;
	data[6] = #100000 1'b1;
	data[6] = #20000 1'b0;
	data[6] = #20000 1'b1;
	data[6] = #40000 1'b0;
	data[6] = #40000 1'b1;
	data[6] = #20000 1'b0;
	data[6] = #40000 1'b1;
	data[6] = #20000 1'b0;
	data[6] = #80000 1'b1;
	data[6] = #20000 1'b0;
	data[6] = #20000 1'b1;
	data[6] = #20000 1'b0;
	data[6] = #40000 1'b1;
	data[6] = #20000 1'b0;
	data[6] = #20000 1'b1;
	data[6] = #40000 1'b0;
	data[6] = #20000 1'b1;
	data[6] = #60000 1'b0;
	data[6] = #20000 1'b1;
	data[6] = #60000 1'b0;
	data[6] = #20000 1'b1;
	data[6] = #20000 1'b0;
	data[6] = #40000 1'b1;
	data[6] = #20000 1'b0;
	data[6] = #20000 1'b1;
end 
// data[ 5 ]
initial
begin
	data[5] = 1'b1;
	data[5] = #60000 1'b0;
	data[5] = #60000 1'b1;
	data[5] = #40000 1'b0;
	data[5] = #20000 1'b1;
	data[5] = #20000 1'b0;
	data[5] = #20000 1'b1;
	data[5] = #20000 1'b0;
	data[5] = #40000 1'b1;
	data[5] = #40000 1'b0;
	data[5] = #20000 1'b1;
	data[5] = #60000 1'b0;
	data[5] = #60000 1'b1;
	data[5] = #20000 1'b0;
	data[5] = #20000 1'b1;
	data[5] = #40000 1'b0;
	data[5] = #40000 1'b1;
	data[5] = #20000 1'b0;
	data[5] = #40000 1'b1;
	data[5] = #80000 1'b0;
	data[5] = #40000 1'b1;
	data[5] = #20000 1'b0;
	data[5] = #60000 1'b1;
	data[5] = #20000 1'b0;
	data[5] = #40000 1'b1;
	data[5] = #60000 1'b0;
	data[5] = #20000 1'b1;
end 
// data[ 4 ]
initial
begin
	data[4] = 1'b0;
	data[4] = #60000 1'b1;
	data[4] = #40000 1'b0;
	data[4] = #20000 1'b1;
	data[4] = #20000 1'b0;
	data[4] = #40000 1'b1;
	data[4] = #40000 1'b0;
	data[4] = #20000 1'b1;
	data[4] = #20000 1'b0;
	data[4] = #20000 1'b1;
	data[4] = #20000 1'b0;
	data[4] = #20000 1'b1;
	data[4] = #40000 1'b0;
	data[4] = #60000 1'b1;
	data[4] = #40000 1'b0;
	data[4] = #20000 1'b1;
	data[4] = #40000 1'b0;
	data[4] = #20000 1'b1;
	data[4] = #20000 1'b0;
	data[4] = #80000 1'b1;
	data[4] = #20000 1'b0;
	data[4] = #20000 1'b1;
	data[4] = #20000 1'b0;
	data[4] = #20000 1'b1;
	data[4] = #20000 1'b0;
	data[4] = #80000 1'b1;
	data[4] = #20000 1'b0;
	data[4] = #20000 1'b1;
	data[4] = #40000 1'b0;
	data[4] = #60000 1'b1;
	data[4] = #20000 1'b0;
end 
// data[ 3 ]
initial
begin
	data[3] = 1'b1;
	data[3] = #20000 1'b0;
	data[3] = #20000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #20000 1'b1;
	data[3] = #60000 1'b0;
	data[3] = #140000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #80000 1'b1;
	data[3] = #20000 1'b0;
	data[3] = #20000 1'b1;
	data[3] = #20000 1'b0;
	data[3] = #40000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #20000 1'b1;
	data[3] = #60000 1'b0;
	data[3] = #20000 1'b1;
	data[3] = #20000 1'b0;
	data[3] = #80000 1'b1;
	data[3] = #20000 1'b0;
	data[3] = #20000 1'b1;
	data[3] = #20000 1'b0;
	data[3] = #20000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #20000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #20000 1'b1;
end 
// data[ 2 ]
initial
begin
	data[2] = 1'b0;
	data[2] = #20000 1'b1;
	data[2] = #20000 1'b0;
	data[2] = #180000 1'b1;
	data[2] = #20000 1'b0;
	data[2] = #20000 1'b1;
	data[2] = #40000 1'b0;
	data[2] = #20000 1'b1;
	data[2] = #160000 1'b0;
	data[2] = #80000 1'b1;
	data[2] = #40000 1'b0;
	data[2] = #20000 1'b1;
	data[2] = #40000 1'b0;
	data[2] = #40000 1'b1;
	data[2] = #20000 1'b0;
	data[2] = #20000 1'b1;
	data[2] = #20000 1'b0;
	data[2] = #60000 1'b1;
	data[2] = #60000 1'b0;
	data[2] = #20000 1'b1;
	data[2] = #80000 1'b0;
end 
// data[ 1 ]
initial
begin
	data[1] = 1'b1;
	data[1] = #20000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #40000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #40000 1'b0;
	data[1] = #60000 1'b1;
	data[1] = #20000 1'b0;
	data[1] = #100000 1'b1;
	data[1] = #20000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #60000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #60000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #20000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #20000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #20000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #40000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #20000 1'b0;
	data[1] = #100000 1'b1;
	data[1] = #20000 1'b0;
	data[1] = #20000 1'b1;
	data[1] = #20000 1'b0;
	data[1] = #100000 1'b1;
end 
// data[ 0 ]
initial
begin
	data[0] = 1'b1;
	data[0] = #20000 1'b0;
	data[0] = #60000 1'b1;
	data[0] = #40000 1'b0;
	data[0] = #60000 1'b1;
	data[0] = #80000 1'b0;
	data[0] = #60000 1'b1;
	data[0] = #20000 1'b0;
	data[0] = #80000 1'b1;
	data[0] = #40000 1'b0;
	data[0] = #40000 1'b1;
	data[0] = #80000 1'b0;
	data[0] = #80000 1'b1;
	data[0] = #80000 1'b0;
	data[0] = #20000 1'b1;
	data[0] = #20000 1'b0;
	data[0] = #20000 1'b1;
	data[0] = #40000 1'b0;
	data[0] = #40000 1'b1;
	data[0] = #80000 1'b0;
	data[0] = #20000 1'b1;
end 

// wrclk
always
begin
	wrclk = 1'b0;
	wrclk = #10000 1'b1;
	#10000;
end 

// wrreq
initial
begin
	wrreq = 1'b0;
	wrreq = #40000 1'b1;
	wrreq = #40000 1'b0;
	wrreq = #40000 1'b1;
	wrreq = #40000 1'b0;
	wrreq = #20000 1'b1;
	wrreq = #20000 1'b0;
	wrreq = #20000 1'b1;
	wrreq = #60000 1'b0;
	wrreq = #40000 1'b1;
	wrreq = #40000 1'b0;
	wrreq = #20000 1'b1;
	wrreq = #40000 1'b0;
	wrreq = #40000 1'b1;
	wrreq = #20000 1'b0;
	wrreq = #20000 1'b1;
	wrreq = #20000 1'b0;
	wrreq = #20000 1'b1;
	wrreq = #20000 1'b0;
	wrreq = #60000 1'b1;
	wrreq = #20000 1'b0;
	wrreq = #20000 1'b1;
	wrreq = #40000 1'b0;
	wrreq = #40000 1'b1;
	wrreq = #40000 1'b0;
	wrreq = #20000 1'b1;
	wrreq = #20000 1'b0;
	wrreq = #20000 1'b1;
	wrreq = #20000 1'b0;
	wrreq = #20000 1'b1;
	wrreq = #40000 1'b0;
	wrreq = #20000 1'b1;
end 

// rdclk
initial
begin
	repeat(12)
	begin
		rdclk = 1'b0;
		rdclk = #41500 1'b1;
		# 41500;
	end
	rdclk = 1'b0;
end 

// rdreq
initial
begin
	rdreq = 1'b0;
	rdreq = #83000 1'b1;
	rdreq = #166000 1'b0;
	rdreq = #249000 1'b1;
	rdreq = #83000 1'b0;
	rdreq = #83000 1'b1;
	rdreq = #83000 1'b0;
	rdreq = #83000 1'b1;
end 
endmodule

